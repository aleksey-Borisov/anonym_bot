from aiogram import Router, Bot
from aiogram.types import Message
from aiogram.filters import CommandStart

from handlers.admin_handlers import AdminFilter
from admin_service import is_admin, get_admin_kb
from logger import log_event, logger

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞ (–¥–æ–±–∞–≤—å—Ç–µ -100 –≤ –Ω–∞—á–∞–ª–æ)
CHANNEL_ID = -1002567330233  # –§–æ—Ä–º–∞—Ç: -100 + —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π ID –∫–∞–Ω–∞–ª–∞
router = Router()

@router.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    try:
        if await is_admin(user_id):
            log_event(user_id, "ADMIN_START")
            await message.answer("üëÆ‚Äç‚ôÇÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
                                reply_markup=get_admin_kb())
        else:
            log_event(user_id, "USER_START")
            await message.answer("–ü—Ä–∏–≤–µ—Ç! \n \n–Ø –±–æ—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤.")
    except Exception as e:
        log_event(user_id, "START_ERROR", str(e))
        await message.answer("‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã")

@router.message(~AdminFilter())
async def send_answer(message: Message, bot: Bot):
    user_id = message.from_user.id
    try:
        user_info = (
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name}\n"
            f"üÜî user_id: {user_id}\n"
            f"üìß Username: @{message.from_user.username}\n\n"
        )

        log_event(user_id, "MESSAGE_RECEIVED", f"Type: {message.content_type}")
        await message.answer("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é. –°–∫–æ—Ä–æ –≤–∞–º –æ—Ç–≤–µ—Ç—è—Ç –≤ –∫–∞–Ω–∞–ª–µ.")

        try:
            if message.text:
                log_event(user_id, "TEXT_SENT", f"Length: {len(message.text)} chars")
                await bot.send_message(
                    chat_id=CHANNEL_ID,
                    text=user_info + f"üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n\n{message.text}"
                )
            elif message.photo:
                log_event(user_id, "PHOTO_SENT")
                photo = message.photo[-1]
                await bot.send_photo(
                    chat_id=CHANNEL_ID,
                    photo=photo.file_id,
                    caption=user_info + (message.caption if message.caption else "üì∑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ")
                )
            elif message.video:
                log_event(user_id, "VIDEO_SENT")
                await bot.send_video(
                    chat_id=CHANNEL_ID,
                    video=message.video.file_id,
                    caption=user_info + (message.caption if message.caption else "üé• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∏–¥–µ–æ")
                )
            elif message.voice:
                log_event(user_id, "VOICE_SENT")
                await bot.send_voice(
                    chat_id=CHANNEL_ID,
                    voice=message.voice.file_id,
                    caption=user_info + "üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
                )
            else:
                log_event(user_id, "UNSUPPORTED_TYPE", f"Type: {message.content_type}")
                await bot.send_message(
                    chat_id=CHANNEL_ID,
                    text=user_info + "‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è"
                )
        except Exception as channel_error:
            log_event(user_id, "CHANNEL_SEND_ERROR", str(channel_error))
            await message.answer("‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª—ë–Ω.")
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª {CHANNEL_ID}: {channel_error}")

    except Exception as e:
        log_event(user_id, "SEND_ERROR", str(e))
        await message.answer("‚ö† –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")